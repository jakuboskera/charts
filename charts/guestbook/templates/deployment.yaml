apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ template "common.names.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: guestbook
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
  template:
    metadata:
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        {{- if .Values.commonLabels }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 8 }}
        {{- end }}
        {{- if .Values.podLabels }}
        {{- include "common.tplvalues.render" (dict "value" .Values.podLabels "context" $) | nindent 8 }}
        {{- end }}
      annotations:
        {{- if .Values.podAnnotations }}
        {{- include "common.tplvalues.render" (dict "value" .Values.podAnnotations "context" $) | nindent 8 }}
        {{- end }}
        {{- if .Values.metrics.podAnnotations }}
        {{- include "common.tplvalues.render" (dict "value" .Values.metrics.podAnnotations "context" $) | nindent 8 }}
        {{- end }}
    spec:
      {{- include "guestbook.imagePullSecrets" . | nindent 6 }}
      initContainers:
      - name: db-readiness
        image: {{ include "guestbook.dbReadiness.image" . }}
        imagePullPolicy: {{ .Values.dbReadiness.image.pullPolicy | quote }}
        command:
        - sh
        - -c
        - |
          until nslookup {{ template "common.names.fullname" . }}-postgresql.{{ .Release.Namespace }}.svc.cluster.local
          do
            echo "Waiting until {{ template "common.names.fullname" . }}-postresql is ready..."
            sleep 1
          done
        {{- if .Values.dbReadiness.resources }}
        resources: {{- toYaml .Values.dbReadiness.resources | nindent 12 }}
        {{- end }}
      containers:
      - name: guestbook
        image: {{ template "guestbook.image" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        env:
          - name: DB_HOST
            value: {{ template "common.names.fullname" . }}-postgresql
          - name: DB_PORT
            value: {{ .Values.postgresql.service.port | quote }}
          - name: DB_NAME
            value: {{ .Values.postgresql.postgresqlDatabase }}
          - name: DB_USER
            value: {{ .Values.postgresql.postgresqlUsername }}
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ template "common.names.fullname" . }}-postgresql
                key: postgresql-password
          - name: PROMETHEUS_METRICS
            value: {{ ternary "enable" "disable" .Values.metrics.enabled }}
          - name: PORT
            value: "5000"
        envFrom:
          {{- if .Values.extraEnvVarsCM }}
          - configMapRef:
              name: {{ include "common.tplvalues.render" (dict "value" .Values.extraEnvVarsCM "context" $) }}
          {{- end }}
          {{- if .Values.extraEnvVarsSecret }}
          - secretRef:
              name: {{ include "common.tplvalues.render" (dict "value" .Values.extraEnvVarsSecret "context" $) }}
          {{- end }}
        ports:
        - name: http
          containerPort: 5000
        {{- if .Values.livenessProbe.enabled }}
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
        {{- else if .Values.customLivenessProbe }}
        livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.customLivenessProbe "context" $) | nindent 12 }}
        {{- end }}
        {{- if .Values.readinessProbe.enabled }}
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
        {{- else if .Values.customReadinessProbe }}
        readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.customReadinessProbe "context" $) | nindent 12 }}
        {{- end }}
        resources: {{- toYaml .Values.resources | nindent 12 }}
